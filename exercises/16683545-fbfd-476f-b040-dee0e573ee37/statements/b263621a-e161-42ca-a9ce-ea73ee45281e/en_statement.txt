<p>In a table, it is possible to <strong>insert values ​​that are obtained directly from the result of a query.</strong></p><p><img alt="" src="https://ikastaroak. birt.eus/edu/argitalpen/backupa/20200331/1920k/es/DAMDAW/BD/BD06/es_DAMDAW_BD06_Contenidos/BD06_CONT_R31_INSERT_SELECT_miniatura.png" /></p><h3>Example</h3><p>Let us imagine that we are going to restructure the company, so that the employees of the <code>'Public Relations'</code> department will be integrated into the <code>'Sales'</code> department.</p><p> The information of employees who have been linked to the <code>"Public Relations"</code> department must be added to the <code>job_history</code> table before reassigning them to the <code>'Sales'</code> department .</p><p>We will start by making a query that looks for the information of the employees of the <code>'Public Relations'</code> department:</p><blockquote><pre><code>SELECT EMPLOYEES.* <br />FROM EMPLOYEES JOIN DEPARTMENTS ON (EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID)<br />WHERE DEPARTMENT_NAME = 'Public Relations';</code><br /><br /> employee_id | first_name | last_name | e-mail | phone_number | hire_date | job_id | salary | commission_pct | manager_id | department_id <br />-------------+------------+-----------+------ -+--------------+---------------------+--------+-- --------+----------------+------------+----------- ----<br /> 204 | Herman | bar | HBAER | 515.123.8888 | 1994-06-07 00:00:00 | PR_REP | 10000.00 | | 101 | 70<br />(1 row)</pre></blockquote><p>Next, we need to know what data we need to add to the <code>job_history</code> table, to adapt the previous query to the requirements of the table <code>job_history</code>:</p><blockquote><pre><code>\d job_history</code><br /><br /> Table "public.job_history"<br /> Column | Type | Collation | Nullable | Default<br />---------------+----------------------------- +-----------+----------+---------<br /> employee_id | integer | | not null |<br /> start_date | timestamp without time zone | | not null |<br /> end_date | timestamp without time zone | | not null | <br /> job_id | character varying(10) | | not null | <br /> department_id | integer | | | </pre></blockquote><p>Of all the information on the employees of the <code>'Public Relations'</code> department, we are left with the following information:</p><blockquote><pre><code >SELECT EMPLOYEE_ID, HIRE_DATE, CURRENT_DATE, JOB_ID, EMPLOYEES.DEPARTMENT_ID<br />FROM EMPLOYEES JOIN DEPARTMENTS ON (EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID)<br />WHERE DEPARTMENT_NAME = 'Public Relations';</code><br / ><br /> employee_id | hire_date | current_date | job_id | department_id <br />-------------+---------------------+--------- --+--------+---------------<br /> 204 | 1994-06-07 00:00:00 | 2022-08-31 | PR_REP | 70<br />(1 row)</pre></blockquote><p>Once the data resulting from the statement meets the requirements of the <code>job_history</code> table, we can use that query as source of the data to be used in the insertion that we must perform in the <code>job_history</code> table.</p><blockquote><pre><code>BEGIN;<br /><br /> <strong>INSERT INTO job_history<br />SELECT EMPLOYEE_ID, HIRE_DATE, CURRENT_DATE, JOB_ID, EMPLOYEES.DEPARTMENT_ID<br />FROM EMPLOYEES JOIN DEPARTMENTS ON (EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID)<br />WHERE DEPARTMENT_NAME = 'Public Relations ';</strong><br />-- INSERT 0 1<br /><br />SELECT EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, JH.DEPARTMENT_ID<br />FROM JOB_HISTORY JH JOIN DEPARTMENTS ON (JH.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID)<br />WHERE DEPARTMENT_NAME = 'Public Relations';<br />ROLLBACK;</code></pre></blockquote><h3>Exercise</h3><p>Let's create different departments for managers. To do this, we will insert, in the <code>departments</code> table, a record for each of the types of work whose identifier ends with <code>'_MAN'</code>, with the following data:</p ><ul><li><code>DEPARTMENT_ID</code>: the result of increasing the <code>DEPARTMENT_ID</code> of the employee to be appointed as department manager by 300.</li><li ><code>DEPARTMENT_NAME</code> - The <code>JOB_TITLE</code> of the type of job being inserted.</li><li><code>MANAGER_ID</code> - The smallest employee identifier of among those with the type of job being inserted.</li><li><code>LOCATION_ID</code>: the constant value 1700</li></ul>