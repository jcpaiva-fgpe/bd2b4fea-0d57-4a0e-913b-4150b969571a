<p>La sentencia <a href=”https://www.postgresql.org/docs/14/sql-update.html” target=”_blank”><code>UPDATE</code></a> permite modificar una serie de valores de determinados registros de las tablas de la base de datos.</p><h3>Sintaxis</h3><p>La manera m&aacute;s sencilla de utilizar la sentencia <code>UPDATE</code> tiene la siguiente sintaxis:</p><blockquote><pre><code> UPDATE table_name <br />    SET column_name = { expression | DEFAULT } [, ...]<br />    [ WHERE condition ];</code></pre></blockquote><p>Donde <code>table_name</code> ser&aacute; el nombre de la tabla en la que quieras modificar datos. Se pueden especificar los nombres de columnas que se deseen de la tabla indicada. A cada columna especificada se le debe asociar el nuevo valor utilizando el signo =. Cada emparejamiento <code>column_name = expression</code> debe separarse del siguiente utilizando comas (,).</p><p>La cl&aacute;usula <code>WHERE</code> seguida de la condici&oacute;n es opcional (como pretenden indicar los corchetes). Si se indica, la actualizaci&oacute;n de los datos s&oacute;lo afectar&aacute; a los registros que cumplen la condici&oacute;n. Por tanto, ten en cuenta que si no indicas la cl&aacute;usula <code>WHERE</code>, los cambios afectar&aacute;n a todos los registros de la tabla.</p><h3>Ejemplo</h3><p>Vamos a incrementar el salario de los empleados, cuyo trabajo sea <code>&#39;IT_PROG&#39;</code>, un 20%.</p><blockquote><pre><code>BEGIN;<br />SELECT employee_id, salary FROM employees WHERE JOB_ID = &#39;IT_PROG&#39; ORDER BY employee_id;<br /><br /><strong>UPDATE </strong>employees<br /><strong>SET </strong>SALARY = SALARY * 1.2<br /><strong>WHERE </strong>JOB_ID = &#39;IT_PROG&#39;;<br />-- UPDATE 5<br /><br />SELECT employee_id, salary FROM employees WHERE JOB_ID = &#39;IT_PROG&#39; ORDER BY employee_id;<br />ROLLBACK;</code></pre></blockquote><h3>Ejercicio</h3><p>Modifica el departamento cuyo nombre es &#39;IT&#39; poniendo como nuevo <code>MANAGER_ID</code> al empleado con identificador 104</p>