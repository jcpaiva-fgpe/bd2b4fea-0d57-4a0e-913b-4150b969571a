<p>The statement <a href=”https://www.postgresql.org/docs/14/sql-update.html” target=”_blank”><code>UPDATE</code></a> allows you to modify a series of values ​​from certain records in the database tables.</p><h3>Syntax</h3><p>The simplest way to use the <code>UPDATE</code> statement is as follows syntax:</p><blockquote><pre><code> UPDATE table_name <br /> SET column_name = { expression | DEFAULT } [, ...]<br /> [ WHERE condition ];</code></pre></blockquote><p>Where <code>table_name</code> will be the name of the table in which you want to modify data. You can specify the column names you want from the indicated table. Each specified column must be associated with the new value using the = sign. Each <code>column_name = expression</code> pairing must be separated from the next using commas (,).</p><p>The <code>WHERE</code> clause followed by the condition is optional (as intended by the brackets). If indicated, the update of the data will only affect the records that meet the condition. Therefore, keep in mind that if you do not specify the <code>WHERE</code> clause, the changes will affect all records in the table.</p><h3>Example</h3><p>Let's increment the salary of the employees, whose job is <code>'IT_PROG'</code>, 20%.</p><blockquote><pre><code>BEGIN;<br />SELECT employee_id, salary FROM employees WHERE JOB_ID = 'IT_PROG' ORDER BY employee_id;<br /><br /><strong>UPDATE </strong>employees<br /><strong>SET </strong>SALARY = SALARY * 1.2<br /><strong> WHERE </strong>JOB_ID = 'IT_PROG';<br />-- UPDATE 5<br /><br />SELECT employee_id, salary FROM employees WHERE JOB_ID = 'IT_PROG' ORDER BY employee_id;<br />ROLLBACK;< /code></pre></blockquote><h3>Exercise</h3><p>Modify the department whose name is 'IT' putting as new <code>MANAGER_ID</code> the employee with identifier 104</p >