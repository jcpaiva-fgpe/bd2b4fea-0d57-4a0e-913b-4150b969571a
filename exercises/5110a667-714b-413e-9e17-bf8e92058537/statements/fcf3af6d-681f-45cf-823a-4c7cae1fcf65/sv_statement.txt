<p>Med uttalandet <a href=”https://www.postgresql.org/docs/14/sql-update.html” target=”_blank”><code>UPPDATERA</code></a> kan du för att modifiera en serie värden från vissa poster i databastabellerna.</p><h3>Syntax</h3><p>Det enklaste sättet att använda <code>UPDATE</code>-satsen är följande syntax :</p><blockquote><pre><code> UPPDATERA tabellnamn <br /> SET kolumnnamn = { uttryck | DEFAULT } [, ...]<br /> [ WHERE condition ];</code></pre></blockquote><p>Där <code>tabellnamn</code> kommer att vara namnet på tabellen där du vill ändra data. Du kan ange de kolumnnamn du vill ha från den angivna tabellen. Varje angiven kolumn måste associeras med det nya värdet med tecknet =. Varje <code>column_name = expression</code>-parning måste separeras från nästa med kommatecken (,).</p><p><code>WHERE</code>-satsen följt av villkoret är valfri (som avsett inom parentes). Om det anges kommer uppdateringen av data endast att påverka de poster som uppfyller villkoret. Tänk därför på att om du inte anger <code>WHERE</code>-satsen kommer ändringarna att påverka alla poster i tabellen.</p><h3>Exempel</h3><p>Låt oss öka lön för de anställda, vars jobb är <code>'IT_PROG'</code>, 20%.</p><blockquote><pre><code>BEGIN;<br />SELECT anställd_id, lön FRÅN anställda WHERE JOB_ID = 'IT_PROG' BESTÄLLNING EFTER anställd_id;<br /><br /><strong>UPPDATERA </strong>anställda<br /><strong>SETT </strong>LÖN = LÖN * 1.2<br /><strong> VAR < /strong>JOB_ID = 'IT_PROG';<br />-- UPPDATERING 5<br /><br />VÄLJ anställd_id, lön FRÅN anställda WHERE JOB_ID = 'IT_PROG' BESTÄLLNING EFTER anställd_id;<br />ROLLBACK;< /kod ></pre></blockquote><h3>Övning</h3><p>Ändra avdelningen vars namn är 'IT' och sätt som ny <code>MANAGER_ID</code> medarbetaren med identifierare 104</p >