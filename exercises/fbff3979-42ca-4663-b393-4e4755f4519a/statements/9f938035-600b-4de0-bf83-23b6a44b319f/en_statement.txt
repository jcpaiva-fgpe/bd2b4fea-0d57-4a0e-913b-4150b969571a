<p>The <code>SQL</code> language has a series of statements for editing (inserting, updating and deleting) the data stored in a database. This set of statements is called <code><em>Data Manipulation Language</em> (DML)</code>.</p><p>The statement <a href=”https://www.postgresql .org/docs/14/sql-insert.html” target=”_blank”><code>INSERT</code></a> allows inserting new rows or records into an existing table.</p><h3 >Syntax</h3><p>The simplest format for using the <code>INSERT</code> statement has the following syntax:</p><blockquote><pre><code>INSERT INTO <em>table_name </em> [ ( <em>column_name</em> [, ...] ) ]<br /> VALUES ( <em>expression</em> [, ...] );</code></ pre></blockquote><p>Where <em>table_name</em> will be the name of the table you want to add new records to. In <code>( <em>column_name</em> [, ...] )</code> the columns of said table in which you want to write the new values ​​indicated in <code>VALUES ( <em> expression</em> [, ...] )</code>. It is possible to omit the column list <code>( <em>column_name</em> [, ...] )</code>, if the values ​​of all columns are provided and in the order in which they are found in the table.</p><p>Both the list of columns and the list of values ​​will separate each of their elements by commas. Note also that each field of <code>( <em>column_name</em> [, ...] )</code> must have a valid value in the corresponding position in <code>VALUES ( <em >expression</em> [, ...] )</code> (If you don't remember the valid values ​​for each field you can use the sentence <code><em>\d</em></code> followed by the name of the table you want to query).</p><h3>Example</h3><p>Let's start by inserting <code>Spain</code> between the list of countries.</p><blockquote><p ><code>BEGIN;<br /><br /><strong>INSERT INTO countries (COUNTRY_ID, COUNTRY_NAME, REGION_ID)<br />VALUES ('ES', 'Spain', 1);</strong><br />-- INSERT 0 1<br /><br />SELECT * FROM countries;<br />ROLLBACK;</code></p></blockquote><h3>Exercise</h3><p>Create the <code>'Web Development'</code> department with the following data:</p><table align="center" border="1" summary="Results from query 1"><tbody><tr>< th style="background-color:#9e9e9e">DEPARTMENT_ID</th><th style="background-color:#9e9e9e">DEPARTMENT_NAME</th><t h style="background-color:#9e9e9e">MANAGER_ID</th><th style="background-color:#9e9e9e">LOCATION_ID</th></tr><tr><td>280</td> <td>Web Development</td><td>103</td><td>1700</td></tr></tbody></table><small><p><strong>Note:</ strong> In <code>JuezLTI</code> <strong>every time a response is launched, the data is reset.</strong> Therefore, it is important that in your <code>PostgreSQL</code> work environment you have always the initial data of the <code>HR</code> schema.</p><p>To do this, as you can see in the example, you should start each activity with <code>BEGIN;</code>, which starts a transaction. Subsequently, you can execute as many statements as you need, in our example we have launched an <code>INSERT</code> and a <code>SELECT</code>.</p><p>Once an activity is finished we will leave the scheme again <code>HR</code> with its initial values ​​with the statement <code>ROLLBACK;</code></p><p>However, the only statement that should be transferred to <code>JuezLTI</code> It would be the one that is highlighted. In our case, we would have to move the <code>INSERT</code> to <code>JuezLTI</code>.</p></small>